from __future__ import annotations

import textwrap

from autogpt.middlewares.next_requests import NextRequests


class Task:
    """
    A task is responsible for generating a prompt and processing the associated response.
    """

    def prompt(self, query: str) -> str:
        return textwrap.dedent(self.generate_prompt(query))

    def generate_prompt(self, query: str) -> str:
        """
        Generate a prompt for the given query.
        If the generated prompt is an empty string, it will not be submitted to a LLM backend.
        """
        return ""

    def process_response(self, response: str) -> TaskResponse:
        return TaskResponse(NextRequests())


class TaskResponse:
    """
    A task response contains the next requests to submit to a LLM backend in response
    to the response generated by the LLM backend.
    """

    next_requests: NextRequests

    def __init__(self, next_requests: NextRequests) -> None:
        self.next_requests = next_requests
